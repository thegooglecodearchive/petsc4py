=========================
HISTORY: PETSc for Python
=========================

:Author:       Lisandro Dalcin
:Contact:      dalcinl@gmail.com
:Web Site:     http://petsc4py.googlecode.com/
:Organization: CIMEC <http://www.cimec.org.ar>
:Address:      PTLC, 3000 Santa Fe, Argentina


Release 1.1.1
=============

This is a new-features and bug-fix release.

- Support for setting PETSC_COMM_WORLD before PETSc initialization.

- Support for coordinates, refinement and interpolation in DA. Many
  thanks to Blaise Bourdin.

- Workaround build failures when PETSc is built with *mpiuni*.

- Workaround GIL-related APIs for non-threaded Python builds.


Release 1.1
===========

- Update for API cleanups, changes, and new calls in PETSc 3.1 and
  some other missing features.

- Add support for Jed Brown's THETA an GL timestepper implementations.

- Fix the annoying issues related to Open MPI shared libraries
  dependencies and Python dynamic loading.

- Many minor bug-fixes. Many thanks to Ethan Coon, Dmitry Karpeev,
  Juha Jaykka, and Michele De Stefano.


Release 1.0.3
=============

This is a bug-fix release. 

- Added a quick fix to solve build issues. The macro __SDIR__ is no
  longer passed to the compiler in the command line.


Release 1.0.2
=============

This is a new-features and bug-fix release.

- Now ``petsc4py`` works against core PETSc built with complex
  scalars.

- Added support for PETSc logging features like stages, classes and
  events. Stages and events support the context manager interface
  (``with`` statement).

- Documentation generated with Epydoc and Sphinx is now included in
  the release tarball.

- Removed enumeration-like classes from the ``petsc4py.PETSc`` module
  namespace. For example, now you have to use ``PETSc.KSP.Type``
  instead of ``PETSc.KSPType``.

- The ``PETSc.IS`` to ``numpy.ndarray`` conversion now works for
  stride and block index sets.

- Implemented a more robust import machinery for multi-arch
  ``petsc4py`` installations. Now a wrong value in the ``PETSC_ARCH``
  environmental variable emit a warning (instead of failing) at import
  time.

- The unittest-based testsuite now can run under ``nose`` with its
  default options.

- Removed the dependency on ``numpy.distutils``, just use core Python
  ``distutils``.


Release 1.0.1
=============

This is a bug-fix release. Compile Cython-generated C sources with
``-Wwrite-strings`` removed, as this flag (inherited from PETSc) made
GCC emit a lot of (harmless but annoying) warnings about conversion of
string literals to non-const char pointers.


Release 1.0.0
=============

This is the fist release of the all-new, Cython-based, implementation
of *PETSc for Python*.
